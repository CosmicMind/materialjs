include                            modules/*.conf;

worker_processes                   auto;

pid                                /var/run/nginx.pid;

error_log                          /node/logs/error.log warn;

events {
  worker_connections               1024;
  multi_accept                     on;
  accept_mutex                     off;
}

http {
  include                          mime.types;
  default_type                     application/octet-stream;

  #
  # Hide the server tokens from being returned in the response header.
  #
  server_tokens                    off;

  #
  # Flag for logging.
  #
  map $status $loggable {
    âˆ¼^[23]  0;
    default  1;
  }

  #
  # Setup the GeoIP data.
  #
  map $http_x_forwarded_for $realip {
    ~^([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+) $1;
    default $remote_addr;
  }

  log_format                       log_format_general escape=json
  '{'
    '"time_local":"$time_local",'
    '"remote_addr":"$remote_addr",'
    '"remote_user":"$remote_user",'
    '"request_method":"$request_method",'
    '"request":"$request",'
    '"response_status": "$status",'
    '"body_bytes_sent":"$body_bytes_sent",'
    '"request_time":"$request_time",'
    '"http_referrer":"$http_referer",'
    '"http_user_agent":"$http_user_agent",'
    '"real_ip": "$realip",'
    '"cookie__cm": "$cookie___cm",'
  '}';

  sendfile                         on;
  sendfile_max_chunk               1024k;
  aio                              threads;
  tcp_nopush                       on;
  tcp_nodelay                      on;
  keepalive_timeout                65;

  gzip                             off;
  gzip_comp_level                  1;
  gzip_proxied                     any;
  gzip_min_length                  1000;
  gzip_types                       text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  #
  # Stop empty or non authorized hosts from gaining access.
  #
  server {
    listen                        80;
    server_name                   '' localhost 127.0.0.1;
    return                        444;
  }

  include                         http.d/*.conf;
}